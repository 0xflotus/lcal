#!/bin/sh -
#
# SCRIPT: shcal
# AUTHOR: Luciano D. Cecere
# DATE: 10/21/2017-01:56:43 AM
########################################################################
#
# shcal - display a calendar - POSIX version
# Copyright (C) 2017 Luciano D. Cecere <ldante86@aol.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
########################################################################

export PATH=/bin:/usr/bin
unalias -a
PROGRAM="${0##*/}"

month_names_long="January February March April May June July August September October November December"
month_names_short="Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec"
day_names_short="Su Mo Tu We Thu Fr Sa"

month=$(date +%m)
day=$(date +%d)
year=$(date +%Y)

_get_month()
{
	local c=0
	for i in $month_names_long
	do
		c=$(($c + 1))
		if [ $c -eq $1 ]; then
			echo "$i"
			return
		fi
	done
}

_get_month_lengths()
{
        if [ $(($1 % 4)) -eq 0 ] && [ $(($1 % 100)) -ne 0 ] || [ $(($1 % 400)) -eq 0 ]; then
                len="31 29 31 30 31 30 31 31 30 31 30 31"
	else
                len="31 28 31 30 31 30 31 31 30 31 30 31"
        fi
}

_is_leap()
{
        if [ $(($1 % 4)) -eq 0 ] && [ $(($1 % 100)) -ne 0 ] || [ $(($1 % 400)) -eq 0 ]; then
		return 1
        fi
}

_month_len()
{
	local c=0
	for i in $len
	do
		c=$(($c + 1))
		if [ $c -eq $1 ]; then
			mlen="$i"
		fi
	done
}

_center()
{
        printf "%*s\n" $(( (${1} + ${#2}) / 2 )) "$2"
}

_ncenter()
{
        printf "%*s" $(( (${1} + ${#2}) / 2)) "$2"
}

_is_day_valid()
{
        if [ $1 -gt $mlen ] || [ $1 -le 0 ]; then
                echo "$PROGRAM: day out of range of month [1-${mlen}]"
                return 1
        fi
}

_is_month_valid()
{
        if [ $1 -gt 12 ] || [ $1 -lt 1 ]; then
                 echo "$PROGRAM: month out of range [1-12]"
                return 1
        fi
}


_get_month_lengths $year
_month_len $month

_is_day_valid $day
_is_month_valid 13
